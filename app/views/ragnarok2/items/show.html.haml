.model_details.item
  .header
    .model_icon= ragnarok2_icon_image_tag(@item.icon, :alt=>@item.name)
    %h2= @item
    .categoryies
      =raw @item.categories.collect{|c| link_to c, c}.join(" &#187; ")

    - if @item.description
      .description= ragnarok2_human_description @item.description

  .box
    %span.title Requirements
    .requirements
      - unless @item.require_level.zero?
        .requirement Level: #{@item.require_level}
      - unless @item.require_sex.zero?
        .requirement Gender: #{human_gender(@item.require_sex)}
      - unless @item.jobs.empty?
        .requirement Job: #{@item.jobs.join(", ")}

  .box
    %span.title Properties
    - if @item.cash_shop_info
      .property
        %span.cashshop CashShop-Item
        = surround '(', ')' do
          = human_cash_shop_duration(@item.cash_shop_info)
        
    - unless @item.traits.empty?
      - @item.traits.each do |trait|
        .property= render trait
      %br
    - unless @item.price_buy.zero?
      .attribute Price #{@item.price_buy}
    - unless @item.socket_max.zero?
      .property= pluralize(@item.socket_max, "Socket")
    .attribute #{@item.stack_max} pieces stackable
    .attribute Durability #{human_item_durability(@item.durability)}
    .attribute= booleanize_string("Droppable", @item.is_drop)
    .attribute= booleanize_string("Depositable", @item.is_deposit)
    .attribute= booleanize_string("Destructable", @item.is_destruct)
    .attribute= booleanize_string("Sellable", @item.is_sell)
    .attribute= booleanize_string("Tradable", @item.is_trade)
    .attribute= booleanize_string("Composable", @item.is_compose)

  - if @item.skill
    = render @item.skill

  - unless @item.quest_item_rewards.empty?
    .box
      %span.title Given as quest reward
      - @item.quest_item_rewards.each do |reward|
        .questreward
          = link_to(reward.quest, reward.quest)
          (#{pluralize(reward.amount, "pieces")})

  - unless @item.citizens.empty?
    .box
      %span.title Buyable at
      - @item.citizens.each do |citizen|
        .merchant
          = link_to(citizen, citizen)

  - unless (@item.main_sets+@item.alternative_sets).empty?
    .box
      %span.title Part of
      - (@item.main_sets+@item.alternative_sets).each do |set|
        .item_set
          = link_to set, set

  - unless @item.item_break_results.empty?
    .box
      %span.title Breaks into
      .break_results
        - @item.item_break_results.each do |break_result|
          = render break_result

= render "/share/development_box", :model => @item